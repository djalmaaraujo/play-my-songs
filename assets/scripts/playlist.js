// Generated by CoffeeScript 1.6.3
(function() {
  var Playlist;

  Playlist = (function() {
    function Playlist() {
      if (this.checkForFileAPISupport()) {
        this.setElements();
        this.createAudioAPIElements();
        this.handlers();
      } else {
        alert("Your browser don't support drag and drop, get out of here!");
      }
    }

    Playlist.prototype.checkForFileAPISupport = function() {
      return typeof window.FileReader === 'function';
    };

    Playlist.prototype.setElements = function() {
      this.holder = document.getElementById('playlist');
      return this.player = document.getElementById('player');
    };

    Playlist.prototype.handlers = function() {
      this.handleDragOver();
      this.handleDragEnd();
      this.handleDragDrop();
      return this.handlerPlaySong();
    };

    Playlist.prototype.handleDragOver = function() {
      return this.holder.ondragover = function(event) {
        event.target.className = 'drag-over';
        return false;
      };
    };

    Playlist.prototype.handleDragEnd = function() {
      return this.holder.ondragend = function(event) {
        event.className = '';
        return false;
      };
    };

    Playlist.prototype.handleDragDrop = function() {
      var _this = this;
      return this.holder.ondrop = function(event) {
        event.preventDefault();
        event.target.className = '';
        return _this.populate(event.dataTransfer.files);
      };
    };

    Playlist.prototype.handlerPlaySong = function() {
      var _this = this;
      return this.holder.addEventListener('click', function(event) {
        event.preventDefault();
        if (parseInt(event.target.getAttribute('data-song'), 10) > 0) {
          return _this.play(event.target.getAttribute('data-song'));
        }
      });
    };

    Playlist.prototype.populate = function(songs) {
      var song, _i, _len;
      this.playlist = songs;
      for (_i = 0, _len = songs.length; _i < _len; _i++) {
        song = songs[_i];
        this.addSong(song, _i);
      }
      return this.play(0);
    };

    Playlist.prototype.addSong = function(song, index) {
      if (song.type.match(/audio.*/)) {
        return this.holder.innerHTML += '<li><a href="#" data-song="' + index + '">' + this.removeExtension(song.name) + '</a></li>';
      }
    };

    Playlist.prototype.removeExtension = function(song) {
      return song.split('.')[0];
    };

    Playlist.prototype.play = function(songID) {
      var file, self;
      self = this;
      if (!this.playlist[songID]) {
        return alert('Song not found');
      } else {
        this.stop();
        file = new FileReader();
        file.onload = function(fileEvent) {
          var data;
          data = fileEvent.target.result;
          return self.createAudio(data);
        };
        return file.readAsArrayBuffer(this.playlist[songID]);
      }
    };

    Playlist.prototype.stop = function() {
      if (this.audioSource) {
        this.audioSource.stop(0);
      }
      return this.createAudioAPIElements();
    };

    Playlist.prototype.createAudioAPIElements = function() {
      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();
      return this.audioSource = this.audioContext.createBufferSource();
    };

    Playlist.prototype.createAudio = function(data) {
      var self;
      self = this;
      if (self.audioContext.decodeAudioData) {
        return self.audioContext.decodeAudioData(data, function(buffer) {
          self.audioSource.buffer = buffer;
          self.audioSource.connect(self.audioContext.destination);
          return self.audioSource.start(0);
        }, function(e) {
          return alert('Error loading this file');
        });
      }
    };

    return Playlist;

  })();

  this.Playlist = Playlist;

}).call(this);
